//go:build !ignore_autogenerated
// +build !ignore_autogenerated

// Code generated by controller-gen. DO NOT EDIT.

package v1alpha1

import ()

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FlinkDeployment) DeepCopyInto(out *FlinkDeployment) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FlinkDeployment.
func (in *FlinkDeployment) DeepCopy() *FlinkDeployment {
	if in == nil {
		return nil
	}
	out := new(FlinkDeployment)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FlinkDeploymentSpec) DeepCopyInto(out *FlinkDeploymentSpec) {
	*out = *in
	if in.FlinkConfiguration != nil {
		in, out := &in.FlinkConfiguration, &out.FlinkConfiguration
		*out = make(map[string]string, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
	out.JobManager = in.JobManager
	out.TaskManager = in.TaskManager
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FlinkDeploymentSpec.
func (in *FlinkDeploymentSpec) DeepCopy() *FlinkDeploymentSpec {
	if in == nil {
		return nil
	}
	out := new(FlinkDeploymentSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FlinkSessionJob) DeepCopyInto(out *FlinkSessionJob) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	out.Spec = in.Spec
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FlinkSessionJob.
func (in *FlinkSessionJob) DeepCopy() *FlinkSessionJob {
	if in == nil {
		return nil
	}
	out := new(FlinkSessionJob)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FlinkSessionJobSpec) DeepCopyInto(out *FlinkSessionJobSpec) {
	*out = *in
	out.Job = in.Job
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FlinkSessionJobSpec.
func (in *FlinkSessionJobSpec) DeepCopy() *FlinkSessionJobSpec {
	if in == nil {
		return nil
	}
	out := new(FlinkSessionJobSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *JobManagerSpec) DeepCopyInto(out *JobManagerSpec) {
	*out = *in
	out.Resource = in.Resource
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new JobManagerSpec.
func (in *JobManagerSpec) DeepCopy() *JobManagerSpec {
	if in == nil {
		return nil
	}
	out := new(JobManagerSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *JobSpec) DeepCopyInto(out *JobSpec) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new JobSpec.
func (in *JobSpec) DeepCopy() *JobSpec {
	if in == nil {
		return nil
	}
	out := new(JobSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ResourceSpec) DeepCopyInto(out *ResourceSpec) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ResourceSpec.
func (in *ResourceSpec) DeepCopy() *ResourceSpec {
	if in == nil {
		return nil
	}
	out := new(ResourceSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TaskManagerSpec) DeepCopyInto(out *TaskManagerSpec) {
	*out = *in
	out.Resource = in.Resource
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TaskManagerSpec.
func (in *TaskManagerSpec) DeepCopy() *TaskManagerSpec {
	if in == nil {
		return nil
	}
	out := new(TaskManagerSpec)
	in.DeepCopyInto(out)
	return out
}
