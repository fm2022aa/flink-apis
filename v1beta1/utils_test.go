package v1beta1

import (
	. "github.com/onsi/ginkgo/v2"
	. "github.com/onsi/gomega"
)

var _ = Describe("Test Utils", func() {
	It("IsArgsEqual should work", func() {
		v := IsArgsEqual(nil, nil)
		Expect(v).To(BeTrue())
		v = IsArgsEqual([]string{}, []string{})
		Expect(v).To(BeTrue())
		v = IsArgsEqual([]string{""}, []string{""})
		Expect(v).To(BeTrue())
		v = IsArgsEqual([]string{"", ""}, []string{"", ""})
		Expect(v).To(BeTrue())

		v = IsArgsEqual([]string{"a"}, []string{"a"})
		Expect(v).To(BeTrue())
		v = IsArgsEqual([]string{"a", "b"}, []string{"b", "a"})
		Expect(v).To(BeTrue())
		v = IsArgsEqual([]string{"a", ""}, []string{"", "a"})
		Expect(v).To(BeTrue())
		v = IsArgsEqual([]string{"a", "b"}, []string{"a", "b"})
		Expect(v).To(BeTrue())
		v = IsArgsEqual([]string{"a", "b", "c"}, []string{"b", "a", "c"})
		Expect(v).To(BeTrue())
		v = IsArgsEqual([]string{"a", "b", "c"}, []string{"b"})
		Expect(v).To(BeFalse())

		v = IsArgsEqual([]string{"-a", "b", "-c"}, []string{"-a", "b", "-c"})
		Expect(v).To(BeTrue())
		v = IsArgsEqual([]string{"-a", "b", "-c"}, []string{"-c", "-a", "b"})
		Expect(v).To(BeTrue())
		v = IsArgsEqual([]string{"-a", "b", "-c"}, []string{"c", "-a", "b"})
		Expect(v).To(BeFalse())
		v = IsArgsEqual([]string{"-a", "b", "-c", "d"}, []string{"-c", "d", "-a", "b"})
		Expect(v).To(BeTrue())
		v = IsArgsEqual([]string{"-a", "b", "-c", "d"}, []string{"-c", "d", "-a", "bb"})
		Expect(v).To(BeFalse())
		v = IsArgsEqual([]string{"-a", "b", "d"}, []string{"d", "-a", "b"})
		Expect(v).To(BeTrue())
		v = IsArgsEqual([]string{"-a", "b", "d"}, []string{"-a", "b", "d"})
		Expect(v).To(BeTrue())

		v = IsArgsEqual([]string{"--topic", "a", "--name", "xin"}, []string{"--name", "xin", "--topic", "a"})
		Expect(v).To(BeTrue())
		v = IsArgsEqual([]string{"--name", "xin", "--topic", "a"}, []string{"--name", "xin", "--topic", "a"})
		Expect(v).To(BeTrue())
		v = IsArgsEqual([]string{"--name", "xin", "ver"}, []string{"--name", "xin", "ver"})
		Expect(v).To(BeTrue())
		v = IsArgsEqual([]string{"--name", "xin", "ver"}, []string{"ver", "--name", "xin"})
		Expect(v).To(BeTrue())
		v = IsArgsEqual([]string{"--name", "xin", "-V"}, []string{"--name", "xin", "-V"})
		Expect(v).To(BeTrue())
		v = IsArgsEqual([]string{"--name", "xin", "-V"}, []string{"-V", "--name", "xin"})
		Expect(v).To(BeTrue())
		v = IsArgsEqual([]string{"--name", "xin", "--topic", "a"}, []string{"--name", "xin", "--topic", "b"})
		Expect(v).To(BeFalse())
		v = IsArgsEqual([]string{"--name", "xin", "--topic"}, []string{"--name", "xin", "--topic"})
		Expect(v).To(BeTrue())
		v = IsArgsEqual([]string{"--name", "xin", "--topic"}, []string{"--topic", "--name", "xin"})
		Expect(v).To(BeTrue())

		v = IsArgsEqual([]string{"--name", "xin", "-v", "9", "-V", "--topic", "new"}, []string{"--name", "xin", "-v", "9", "-V", "--topic", "new"})
		Expect(v).To(BeTrue())
		v = IsArgsEqual([]string{"--name", "xin", "-v", "9", "-V", "--topic", "new"}, []string{"-v", "9", "--name", "xin", "-V", "--topic", "new"})
		Expect(v).To(BeTrue())
		v = IsArgsEqual([]string{"--name", "xin", "-v", "9", "-V", "--topic", "new"}, []string{"-v", "9", "--name", "xin", "--topic", "new", "-V"})
		Expect(v).To(BeTrue())
		v = IsArgsEqual([]string{"--name", "xin", "-v", "9", "-V", "--topic", "new"}, []string{"-v", "10", "--name", "xin", "--topic", "new", "-V"})
		Expect(v).To(BeFalse())
	})
})
